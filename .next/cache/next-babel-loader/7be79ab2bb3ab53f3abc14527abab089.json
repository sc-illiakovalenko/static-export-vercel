{"ast":null,"code":"/* 3a392a31e26a0932b87d29b16df52e9f4356d572\n * This file is automatically generated by graphql-let. */\nimport gql from 'graphql-tag';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport const ConnectedDemoQueryDocument = gql`\n    query ConnectedDemoQuery($datasource: String!, $contextItem: String!) {\n  datasource(value: $datasource) {\n    id\n    name\n    ... on GraphQLConnectedDemo {\n      sample1 {\n        jss\n        value\n      }\n      sample2 {\n        jss\n        text\n        target\n        url\n        definition {\n          type\n          shared\n        }\n      }\n    }\n  }\n  contextItem: item(path: $contextItem) {\n    id\n    ... on AppRoute {\n      pageTitle {\n        value\n      }\n    }\n    children(requirePresentation: true) {\n      id\n      ... on AppRoute {\n        pageTitle {\n          value\n          jss\n        }\n      }\n      url(options: {disableLanguageEmbedding: true})\n    }\n  }\n}\n    `;\n/**\n * __useConnectedDemoQueryQuery__\n *\n * To run a query within a React component, call `useConnectedDemoQueryQuery` and pass it any options that fit your needs.\n * When your component renders, `useConnectedDemoQueryQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useConnectedDemoQueryQuery({\n *   variables: {\n *      datasource: // value for 'datasource'\n *      contextItem: // value for 'contextItem'\n *   },\n * });\n */\n\nexport function useConnectedDemoQueryQuery(baseOptions) {\n  return ApolloReactHooks.useQuery(ConnectedDemoQueryDocument, baseOptions);\n}\nexport function useConnectedDemoQueryLazyQuery(baseOptions) {\n  return ApolloReactHooks.useLazyQuery(ConnectedDemoQueryDocument, baseOptions);\n}","map":null,"metadata":{},"sourceType":"module"}