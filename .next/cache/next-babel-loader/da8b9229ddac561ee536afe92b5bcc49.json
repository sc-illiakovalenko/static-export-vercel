{"ast":null,"code":"import _defineProperty from \"C:/work/projects/nextjs-vercel/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport NotFound from 'components/NotFound';\nimport Layout from 'components/Layout';\nimport { SitecoreContext, ComponentPropsContext } from '@sitecore-jss/sitecore-jss-nextjs';\nimport { componentFactory } from 'temp/componentFactory'; // import config from 'temp/config';\n\nvar SitecorePage = function SitecorePage(_ref) {\n  var _layoutData$sitecore$;\n\n  var notFound = _ref.notFound,\n      layoutData = _ref.layoutData,\n      componentProps = _ref.componentProps;\n  console.log('----', notFound, layoutData, componentProps);\n\n  if (notFound) {\n    var _layoutData$sitecore;\n\n    return /*#__PURE__*/_jsx(NotFound, {\n      context: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore = layoutData.sitecore) === null || _layoutData$sitecore === void 0 ? void 0 : _layoutData$sitecore.context\n    });\n  }\n\n  var context = _objectSpread({\n    route: layoutData.sitecore.route,\n    itemId: (_layoutData$sitecore$ = layoutData.sitecore.route) === null || _layoutData$sitecore$ === void 0 ? void 0 : _layoutData$sitecore$.itemId\n  }, layoutData.sitecore.context);\n\n  var routeData = layoutData.sitecore.route;\n\n  var PageLayout = function PageLayout() {\n    return /*#__PURE__*/_jsx(ComponentPropsContext, {\n      value: componentProps,\n      children: /*#__PURE__*/_jsx(SitecoreContext, {\n        componentFactory: componentFactory,\n        context: context,\n        children: /*#__PURE__*/_jsx(Layout, {\n          route: routeData\n        })\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsx(PageLayout, {});\n}; // This function gets called at build and export time to determine\n// pages for SSG (\"paths\", as tokenized array).\n\n\nexport var __N_SSG = true;\nexport default SitecorePage;","map":null,"metadata":{},"sourceType":"module"}